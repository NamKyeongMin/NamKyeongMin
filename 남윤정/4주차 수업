/* Lab1-1: scratch */
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

#define NUM 5

struct FRUIT {
	char name[50];
	float price;
	int number;
	/* code here for structure */
};

void init(struct FRUIT* fru) {
	for (int i = 0; i < NUM; i++) {
		printf("Type %d-th info (name, price, number):", i);
		/* code here for initilization */
		scanf_s("%s %f %d", fru[i].name, &fru[i].price, &fru[i].number);
	}
}

void print(struct FRUIT* fru) {
	printf("\nPrinting the result\n");
	for (int i = 0; i < NUM; i++) {
		/* code here for printing */
		printf("\nPrinting the fruit information and total cost:\n");
		totalCost += fru[i].price * fru[i].number;
	}
	printf("Total cost to buy all fruits: $%.2f\n", totalCost);
}

int main() {
	struct FRUIT fru[NUM];
	init(fru);
	print(fru);
	return 0;
}

----------------------------------------------------------------------------------------------------------------------------------------
/* Lab1-2: scratch */
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

#define NUM 5

struct FRUIT {
	/* code here for structure */
	char name[50];
	float price;
	int number;
};

void init(struct FRUIT* fru) {
	for (int i = 0; i < NUM; i++) {
		/* code here for initilization */
		scanf_s("%s %f %d", fru[i].name, &fru[i].price, &fru[i].number);
	}
}

void print(struct FRUIT* fru) {
	printf("\nPrinting the result\n");
	for (int i = 0; i < NUM; i++) {
		/* code here for printing */
		printf("\nPrinting the fruit information and total cost:\n");
		totalCost += fru[i].price * fru[i].number;
	}
	printf("Total cost to buy all fruits: $%.2f\n", totalCost);
}

void print_expensive_item(struct FRUIT* fru) {
	printf("\nPrinting the most expensive item in total\n");
	struct FRUIT tmp;
	/* code here to find the most expensive in total */
	tmp = fru[0]; 
		for (int i = 1; i < NUM; i++) {
			float itemCost = fru[i].price * fru[i].number;
			float tmpCost = tmp.price * tmp.number;

			if (itemCost > tmpCost) {
				tmp = fru[i];
			}
	/* code here for printing */
			printf("%s Price= $%.2f Number= %d Total= $%.2f\n",
				tmp.name, tmp.price, tmp.number, tmp.price * tmp.number);
			
}

int main() {
	struct FRUIT fru[NUM];
	init(fru);
	print(fru);
	print_expensive_item(fru);
}
-------------------------------------------------------------------------------------------------------------------------------------------
/* Lab1-3: scratch */
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#define NUM 5

struct FRUIT {
	/* code here for structure */
	char name[50];
	float price;
	int number;
};

void init(struct FRUIT* fru) {
	for (int i = 0; i < NUM; i++) {
		/* code here for initilization */
		scanf_s("%s %f %d", fru[i].name, &fru[i].price, &fru[i].number);
	
	}
}

void swap(struct FRUIT* a, struct FRUIT* b) {
	/* code here for swapping */
	struct FRUIT tmp
	tmp = *a;
	*a = *b;
	*b = tmp;
}

void sorting(struct FRUIT* fru) {
	/* code here for sorting */
	for (int i=0; i< NUM; i++){
		for (int j = i + 1; j < NUM; j++)  

			if (fru[i].price * fru[i] < fru[j].price * fru[j].number)
				swap(&fru[i], &fur[j]);
		}
	
			}
}
void print(struct FRUIT* fru) {
	printf("\nPrinting the result\n");
	for (int i = 0; i < NUM; i++) {
		/* code here for printing */
		printf("%s Price= %d Number= %d Total=%d\n", fru[i].name, fru[i].price, fru[i].number, fru[i].price * fru[i].number);
	}
	
	}
}

int main() {
	struct FRUIT fru[NUM];
	init(fru);
	sorting(fru);
	print(fru);
}

